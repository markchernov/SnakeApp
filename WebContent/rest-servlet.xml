
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
            http://www.springframework.org/schema/beans     
            http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
            http://www.springframework.org/schema/context 
            http://www.springframework.org/schema/context/spring-context-3.0.xsd
            http://www.springframework.org/schema/tx 
            http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
            http://www.springframework.org/schema/mvc 
            http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd">
        
	<context:component-scan base-package="controllers"/>
	
	<mvc:annotation-driven/>

	<bean id="dao" class="data.SnakeDAO"/>
	
	
	<!-- Declare EntityManagerFactory so we can inject an Entity Manager into 
		our DAO -->
		
	<bean id="myEntityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="persistenceUnitName" value="EventPU" />
		<!-- EclipseLink needs this entry so it can initialize the EMF properly -->
		<property name="jpaPropertyMap">
			<props>
				<prop key="eclipselink.weaving">false</prop>
			</props>
		</property>
	</bean>
	
		<!-- Declare a TransactionManager so we can have Spring automate transactions 
		on our behalf -->
	<bean id="myTransactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="myEntityManagerFactory" />
	</bean>
	
	<!-- Enable the @Transactional annotation -->
	<tx:annotation-driven transaction-manager="myTransactionManager" />
	
	


</beans>